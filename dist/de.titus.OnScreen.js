!function(e){var t={};function n(o){if(t[o])return t[o].exports;var i=t[o]={i:o,l:!1,exports:{}};return e[o].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(o,i,function(t){return e[t]}.bind(null,i));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);const o="out-of-view",i="in-view";const r=new class{constructor(){this.listeners=new Array,this.executing=void 0}addElement(e){console.log("addElement",e),this.listeners.push(new class{constructor(e){this.element=e,this.state=o}doChecking(e){console.log("doChecking");const t=this.element.getBoundingClientRect();console.log("bound",t),console.log("aViewport",e),this.state===o?this.__enteringView(t,e):this.__isOutOfViewing(t,e),console.log(this.state)}__enteringView(e,t){(e.top<t.height||e.bottom>0&&e.bottom<t.height)&&(this.state=i)}__isOutOfViewing(e,t){(e.top>t.height||e.bottom<0)&&(this.state=o)}}(e))}execute(){void 0!==this.executing&&clearTimeout(this.executing),this.executing=setTimeout((()=>{console.log("execute");const e={width:window.innerWidth,height:window.innerHeight};this.listeners.forEach(t=>{t.doChecking(e)})}).bind(this),250)}};["scroll","resize","load"].forEach(e=>addEventListener(e,r.execute.bind(r)));const s=function(){let e=document.querySelectorAll("[data-onscreen]");Array.prototype.forEach.call(e,function(e){r.addElement(e)}),r.execute()};window.MutationObserver&&addEventListener("DOMContentLoaded",()=>{s(),new MutationObserver(s).observe(document.body,{attributes:!0,childList:!0,subtree:!0})}),"undefined"!=typeof $&&($.fn.OnScreen=function(){r.addElement(this[0])})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,